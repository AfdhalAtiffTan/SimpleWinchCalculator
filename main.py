from GUI import Ui_MainWindow #Generated by Qt Designer
from PyQt4 import QtCore, QtGui

class StartQT4(QtGui.QMainWindow):
    def __init__(self, parent=None):
        QtGui.QWidget.__init__(self, parent)
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        ##################Buttons#######################################################################
        self.ui.pushButton.clicked.connect(self.calculate)
        ##################Buttons#######################################################################

    def calculate(self):
        maxTorque = float(self.ui.lineEdit_1.text())
        motorRPM = float(self.ui.lineEdit_2.text())
        minDiam = float(self.ui.lineEdit_3.text())
        maxDiam = float(self.ui.lineEdit_4.text())

        minTensionN = maxTorque/maxDiam
        maxTensionN = maxTorque/minDiam

        minTensionKG = minTensionN / 9.80665
        maxTensionKG = maxTensionN / 9.80665

        powerOut = maxTorque * motorRPM * 2 * 3.14159265359 / 60.0

        minimumRad = minDiam/2
        maximumRad = maxDiam/2

        minCircumf = 2*3.14159265359*minimumRad
        maxCircumf = 2*3.14159265359*maximumRad

        minSpeed = minCircumf * motorRPM * 60 / 1000
        maxSpeed = maxCircumf * motorRPM * 60 / 1000
        
        self.ui.lineEdit_5.setText(str(minTensionN))
        self.ui.lineEdit_6.setText(str(maxTensionN))
        self.ui.lineEdit_7.setText(str(minTensionKG))
        self.ui.lineEdit_8.setText(str(maxTensionKG))
        self.ui.lineEdit_9.setText(str(powerOut))
        self.ui.lineEdit_10.setText(str(minimumRad))
        self.ui.lineEdit_11.setText(str(maximumRad))
        self.ui.lineEdit_12.setText(str(minSpeed))
        self.ui.lineEdit_13.setText(str(maxSpeed))

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    MainWindow = StartQT4()
    MainWindow.show()
    sys.exit(app.exec_())
